{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../_services\";\nimport * as i4 from \"@angular/common\";\nfunction AddEditComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nfunction AddEditComponent_span_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 12);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport let AddEditComponent = /*#__PURE__*/(() => {\n  class AddEditComponent {\n    constructor(formBuilder, route, router, departmentService, alertService) {\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.departmentService = departmentService;\n      this.alertService = alertService;\n      this.loading = false;\n      this.submitting = false;\n      this.submitted = false;\n      this.errorMessage = '';\n    }\n    ngOnInit() {\n      this.id = this.route.snapshot.params['id'];\n      this.title = this.id ? 'Edit Department' : 'Add Department';\n      this.form = this.formBuilder.group({\n        name: ['', Validators.required],\n        description: ['', Validators.required]\n      });\n      if (this.id) {\n        this.loading = true;\n        this.departmentService.getById(this.id).pipe(first()).subscribe(department => {\n          this.form.patchValue(department);\n          this.loading = false;\n        }, error => {\n          console.error('Error loading department:', error);\n          this.loading = false;\n        });\n      }\n    }\n    // convenience getter for easy access to form fields\n    get f() {\n      return this.form.controls;\n    }\n    onSubmit() {\n      this.submitted = true;\n      this.errorMessage = '';\n      // reset alerts on submit\n      this.alertService.clear();\n      // stop here if form is invalid\n      if (this.form.invalid) {\n        return;\n      }\n      this.submitting = true;\n      this.saveDepartment().pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Department saved successfully', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['/departments']);\n        },\n        error: error => {\n          this.errorMessage = error;\n          this.submitting = false;\n        }\n      });\n    }\n    saveDepartment() {\n      const department = this.form.value;\n      return this.id ? this.departmentService.update(this.id, department) : this.departmentService.create(department);\n    }\n  }\n  AddEditComponent.ɵfac = function AddEditComponent_Factory(t) {\n    return new (t || AddEditComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.DepartmentService), i0.ɵɵdirectiveInject(i3.AlertService));\n  };\n  AddEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddEditComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 19,\n    vars: 12,\n    consts: [[1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"mb-3\"], [1, \"form-label\"], [\"type\", \"text\", 1, \"form-control\", 3, \"formControl\", \"ngClass\"], [1, \"text-center\"], [1, \"btn\", \"btn-primary\", \"me-2\", 3, \"disabled\", \"click\"], [\"class\", \"spinner-border spinner-border-sm me-1\", 4, \"ngIf\"], [\"routerLink\", \"/departments\", 1, \"btn\", \"btn-secondary\"], [1, \"alert\", \"alert-danger\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-1\"]],\n    template: function AddEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵtemplate(4, AddEditComponent_div_4_Template, 2, 1, \"div\", 3);\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n        i0.ɵɵtext(7, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 4)(10, \"label\", 5);\n        i0.ɵɵtext(11, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 7)(14, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function AddEditComponent_Template_button_click_14_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵtemplate(15, AddEditComponent_span_15_Template, 1, 0, \"span\", 9);\n        i0.ɵɵtext(16, \" Save \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"button\", 10);\n        i0.ɵɵtext(18, \"Cancel\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", ctx.id ? \"Edit\" : \"Add\", \" Department\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formControl\", ctx.f.name)(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, ctx.submitted && ctx.f.name.errors));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formControl\", ctx.f.description)(\"ngClass\", i0.ɵɵpureFunction1(10, _c0, ctx.submitted && ctx.f.description.errors));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.submitting);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitting);\n      }\n    },\n    dependencies: [i4.NgClass, i4.NgIf, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlDirective, i2.RouterLink],\n    encapsulation: 2\n  });\n  return AddEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}