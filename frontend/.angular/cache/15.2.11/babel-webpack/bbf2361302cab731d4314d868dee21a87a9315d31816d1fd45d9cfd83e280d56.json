{"ast":null,"code":"import { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../_services\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nconst _c0 = [\"usersChart\"];\nconst _c1 = [\"tokenChart\"];\nfunction DashboardComponent_div_59_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 34)(1, \"div\", 35)(2, \"span\", 36);\n    i0.ɵɵtext(3, \"Loading...\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction DashboardComponent_div_69_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 34)(1, \"div\", 35)(2, \"span\", 36);\n    i0.ɵɵtext(3, \"Loading...\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nexport let DashboardComponent = /*#__PURE__*/(() => {\n  class DashboardComponent {\n    constructor(accountService) {\n      this.accountService = accountService;\n      this.totalUsers = 0;\n      this.activeUsers = 0;\n      this.onlineUsers = 0;\n      this.verifiedUsers = 0;\n      this.monthlyRegistrations = [];\n      this.refreshTokens = 0;\n      this.loading = true;\n    }\n    ngOnInit() {\n      this.loadStats();\n    }\n    ngAfterViewInit() {\n      setTimeout(() => this.initCharts(), 500);\n    }\n    loadStats() {\n      this.accountService.getUserStats().pipe(first()).subscribe(stats => {\n        this.totalUsers = stats.totalUsers;\n        this.activeUsers = stats.activeUsers;\n        this.onlineUsers = stats.onlineUsers;\n        this.verifiedUsers = stats.verifiedUsers;\n        this.refreshTokens = stats.refreshTokenCount;\n        this.monthlyRegistrations = stats.monthlyData;\n        this.loading = false;\n        // Initialize charts after data is loaded\n        this.initCharts();\n      });\n    }\n    initCharts() {\n      if (this.usersChartRef && this.usersChartRef.nativeElement) {\n        const ctx = this.usersChartRef.nativeElement.getContext('2d');\n        new Chart(ctx, {\n          type: 'bar',\n          data: {\n            labels: this.monthlyRegistrations.map(item => item.month),\n            datasets: [{\n              label: 'New Users',\n              data: this.monthlyRegistrations.map(item => item.count),\n              backgroundColor: 'rgba(75, 192, 192, 0.5)',\n              borderColor: 'rgba(75, 192, 192, 1)',\n              borderWidth: 1\n            }]\n          },\n          options: {\n            scales: {\n              y: {\n                beginAtZero: true\n              }\n            },\n            responsive: true,\n            maintainAspectRatio: false\n          }\n        });\n      }\n      if (this.tokenChartRef && this.tokenChartRef.nativeElement) {\n        const ctx = this.tokenChartRef.nativeElement.getContext('2d');\n        new Chart(ctx, {\n          type: 'doughnut',\n          data: {\n            labels: ['Active Sessions', 'Inactive'],\n            datasets: [{\n              data: [this.refreshTokens, this.totalUsers - this.refreshTokens],\n              backgroundColor: ['rgba(54, 162, 235, 0.5)', 'rgba(255, 99, 132, 0.5)'],\n              borderColor: ['rgba(54, 162, 235, 1)', 'rgba(255, 99, 132, 1)'],\n              borderWidth: 1\n            }]\n          },\n          options: {\n            responsive: true,\n            maintainAspectRatio: false\n          }\n        });\n      }\n    }\n  }\n  DashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.AccountService));\n  };\n  DashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    viewQuery: function DashboardComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.usersChartRef = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tokenChartRef = _t.first);\n      }\n    },\n    decls: 73,\n    vars: 6,\n    consts: [[1, \"container-fluid\"], [1, \"row\"], [1, \"col-12\"], [1, \"mb-4\"], [1, \"row\", \"mb-4\"], [1, \"col-xl-3\", \"col-md-6\", \"mb-4\"], [1, \"card\", \"border-left-primary\", \"shadow\", \"h-100\", \"py-2\"], [1, \"card-body\"], [1, \"row\", \"no-gutters\", \"align-items-center\"], [1, \"col\", \"mr-2\"], [1, \"text-xs\", \"font-weight-bold\", \"text-primary\", \"text-uppercase\", \"mb-1\"], [1, \"h5\", \"mb-0\", \"font-weight-bold\", \"text-gray-800\"], [1, \"col-auto\"], [1, \"fas\", \"fa-users\", \"fa-2x\", \"text-gray-300\"], [1, \"card\", \"border-left-success\", \"shadow\", \"h-100\", \"py-2\"], [1, \"text-xs\", \"font-weight-bold\", \"text-success\", \"text-uppercase\", \"mb-1\"], [1, \"fas\", \"fa-user-check\", \"fa-2x\", \"text-gray-300\"], [1, \"card\", \"border-left-warning\", \"shadow\", \"h-100\", \"py-2\"], [1, \"text-xs\", \"font-weight-bold\", \"text-warning\", \"text-uppercase\", \"mb-1\"], [1, \"fas\", \"fa-certificate\", \"fa-2x\", \"text-gray-300\"], [1, \"card\", \"border-left-info\", \"shadow\", \"h-100\", \"py-2\"], [1, \"text-xs\", \"font-weight-bold\", \"text-info\", \"text-uppercase\", \"mb-1\"], [1, \"fas\", \"fa-circle\", \"text-success\", \"me-1\"], [\"routerLink\", \"users-online\", 1, \"text-decoration-none\"], [1, \"col-xl-8\", \"col-lg-7\"], [1, \"card\", \"shadow\", \"mb-4\"], [1, \"card-header\", \"py-3\", \"d-flex\", \"flex-row\", \"align-items-center\", \"justify-content-between\"], [1, \"m-0\", \"font-weight-bold\", \"text-primary\"], [\"class\", \"d-flex justify-content-center\", 4, \"ngIf\"], [1, \"chart-area\", 2, \"height\", \"300px\"], [\"usersChart\", \"\"], [1, \"col-xl-4\", \"col-lg-5\"], [1, \"chart-pie\", 2, \"height\", \"300px\"], [\"tokenChart\", \"\"], [1, \"d-flex\", \"justify-content-center\"], [\"role\", \"status\", 1, \"spinner-border\", \"text-primary\"], [1, \"visually-hidden\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h1\", 3);\n        i0.ɵɵtext(4, \"Analytics Dashboard\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"div\", 5)(7, \"div\", 6)(8, \"div\", 7)(9, \"div\", 8)(10, \"div\", 9)(11, \"div\", 10);\n        i0.ɵɵtext(12, \" Total Users\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 11);\n        i0.ɵɵtext(14);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"div\", 12);\n        i0.ɵɵelement(16, \"i\", 13);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(17, \"div\", 5)(18, \"div\", 14)(19, \"div\", 7)(20, \"div\", 8)(21, \"div\", 9)(22, \"div\", 15);\n        i0.ɵɵtext(23, \" Active Users\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 11);\n        i0.ɵɵtext(25);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(26, \"div\", 12);\n        i0.ɵɵelement(27, \"i\", 16);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(28, \"div\", 5)(29, \"div\", 17)(30, \"div\", 7)(31, \"div\", 8)(32, \"div\", 9)(33, \"div\", 18);\n        i0.ɵɵtext(34, \" Verified Users\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"div\", 11);\n        i0.ɵɵtext(36);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(37, \"div\", 12);\n        i0.ɵɵelement(38, \"i\", 19);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(39, \"div\", 5)(40, \"div\", 20)(41, \"div\", 7)(42, \"div\", 8)(43, \"div\", 9)(44, \"div\", 21);\n        i0.ɵɵtext(45, \" Online Users\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(46, \"div\", 11);\n        i0.ɵɵtext(47);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(48, \"div\", 12);\n        i0.ɵɵelement(49, \"i\", 22);\n        i0.ɵɵelementStart(50, \"a\", 23);\n        i0.ɵɵtext(51, \"View List\");\n        i0.ɵɵelementEnd()()()()()()();\n        i0.ɵɵelementStart(52, \"div\", 1)(53, \"div\", 24)(54, \"div\", 25)(55, \"div\", 26)(56, \"h6\", 27);\n        i0.ɵɵtext(57, \"User Registration Overview\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(58, \"div\", 7);\n        i0.ɵɵtemplate(59, DashboardComponent_div_59_Template, 4, 0, \"div\", 28);\n        i0.ɵɵelementStart(60, \"div\", 29);\n        i0.ɵɵelement(61, \"canvas\", null, 30);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(63, \"div\", 31)(64, \"div\", 25)(65, \"div\", 26)(66, \"h6\", 27);\n        i0.ɵɵtext(67, \"Active Sessions\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(68, \"div\", 7);\n        i0.ɵɵtemplate(69, DashboardComponent_div_69_Template, 4, 0, \"div\", 28);\n        i0.ɵɵelementStart(70, \"div\", 32);\n        i0.ɵɵelement(71, \"canvas\", null, 33);\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(14);\n        i0.ɵɵtextInterpolate(ctx.totalUsers);\n        i0.ɵɵadvance(11);\n        i0.ɵɵtextInterpolate(ctx.activeUsers);\n        i0.ɵɵadvance(11);\n        i0.ɵɵtextInterpolate(ctx.verifiedUsers);\n        i0.ɵɵadvance(11);\n        i0.ɵɵtextInterpolate(ctx.onlineUsers);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      }\n    },\n    dependencies: [i2.NgIf, i3.RouterLink],\n    encapsulation: 2\n  });\n  return DashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}