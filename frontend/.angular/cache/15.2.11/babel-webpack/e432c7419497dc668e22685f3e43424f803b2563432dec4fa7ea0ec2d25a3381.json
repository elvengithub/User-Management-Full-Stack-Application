{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../_services\";\nimport * as i4 from \"@angular/common\";\nfunction AddEditComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nfunction AddEditComponent_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const user_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", user_r4.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", user_r4.email, \" (\", user_r4.role, \")\");\n  }\n}\nfunction AddEditComponent_option_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const dept_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", dept_r5.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(dept_r5.name);\n  }\n}\nfunction AddEditComponent_span_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 17);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport let AddEditComponent = /*#__PURE__*/(() => {\n  class AddEditComponent {\n    constructor(formBuilder, route, router, employeeService, accountService, departmentService, alertService) {\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.employeeService = employeeService;\n      this.accountService = accountService;\n      this.departmentService = departmentService;\n      this.alertService = alertService;\n      this.loading = false;\n      this.submitting = false;\n      this.submitted = false;\n      this.users = [];\n      this.departments = [];\n      this.errorMessage = '';\n    }\n    ngOnInit() {\n      this.id = this.route.snapshot.params['id'];\n      this.title = this.id ? 'Edit Employee' : 'Add Employee';\n      this.form = this.formBuilder.group({\n        employeeId: ['', Validators.required],\n        userId: ['', Validators.required],\n        position: ['', Validators.required],\n        departmentId: ['', Validators.required],\n        hireDate: ['', Validators.required],\n        status: ['Active', Validators.required]\n      });\n      // Load departments\n      this.departmentService.getAll().pipe(first()).subscribe(departments => {\n        this.departments = departments;\n      }, error => {\n        console.error('Error loading departments:', error);\n      });\n      // Load users for dropdown\n      this.accountService.getAll().pipe(first()).subscribe(users => {\n        this.users = users;\n      }, error => {\n        console.error('Error loading users:', error);\n      });\n      if (this.id) {\n        this.loading = true;\n        this.employeeService.getById(this.id).pipe(first()).subscribe(employee => {\n          var _a;\n          this.form.patchValue(employee);\n          if (employee.hireDate) {\n            // Format date for input\n            const date = new Date(employee.hireDate);\n            (_a = this.form.get('hireDate')) === null || _a === void 0 ? void 0 : _a.setValue(date.toISOString().split('T')[0]);\n          }\n          this.loading = false;\n        }, error => {\n          console.error('Error loading employee:', error);\n          this.loading = false;\n        });\n      }\n    }\n    // convenience getter for easy access to form fields\n    get f() {\n      return this.form.controls;\n    }\n    onSubmit() {\n      this.submitted = true;\n      this.errorMessage = '';\n      // reset alerts on submit\n      this.alertService.clear();\n      // stop here if form is invalid\n      if (this.form.invalid) {\n        return;\n      }\n      this.submitting = true;\n      this.saveEmployee().pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Employee saved successfully', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['/employees']);\n        },\n        error: error => {\n          this.errorMessage = error;\n          this.submitting = false;\n        }\n      });\n    }\n    saveEmployee() {\n      const employee = this.form.value;\n      // Convert date string to Date object\n      if (employee.hireDate) {\n        employee.hireDate = new Date(employee.hireDate);\n      }\n      return this.id ? this.employeeService.update(this.id, employee) : this.employeeService.create(employee);\n    }\n  }\n  AddEditComponent.ɵfac = function AddEditComponent_Factory(t) {\n    return new (t || AddEditComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.EmployeeService), i0.ɵɵdirectiveInject(i3.AccountService), i0.ɵɵdirectiveInject(i3.DepartmentService), i0.ɵɵdirectiveInject(i3.AlertService));\n  };\n  AddEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddEditComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 41,\n    vars: 31,\n    consts: [[1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"mb-3\"], [1, \"form-label\"], [\"type\", \"text\", 1, \"form-control\", 3, \"formControl\", \"ngClass\", \"disabled\"], [1, \"form-select\", 3, \"formControl\", \"ngClass\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", 1, \"form-control\", 3, \"formControl\", \"ngClass\"], [\"type\", \"date\", 1, \"form-control\", 3, \"formControl\", \"ngClass\"], [1, \"text-center\"], [1, \"btn\", \"btn-primary\", \"me-2\", 3, \"disabled\", \"click\"], [\"class\", \"spinner-border spinner-border-sm me-1\", 4, \"ngIf\"], [\"routerLink\", \"/employees\", 1, \"btn\", \"btn-secondary\"], [1, \"alert\", \"alert-danger\"], [3, \"value\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-1\"]],\n    template: function AddEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵtemplate(4, AddEditComponent_div_4_Template, 2, 1, \"div\", 3);\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n        i0.ɵɵtext(7, \"Employee ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 4)(10, \"label\", 5);\n        i0.ɵɵtext(11, \"User\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"select\", 7);\n        i0.ɵɵtemplate(13, AddEditComponent_option_13_Template, 2, 3, \"option\", 8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"div\", 4)(15, \"label\", 5);\n        i0.ɵɵtext(16, \"Position\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 4)(19, \"label\", 5);\n        i0.ɵɵtext(20, \"Department\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"select\", 7);\n        i0.ɵɵtemplate(22, AddEditComponent_option_22_Template, 2, 2, \"option\", 8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"div\", 4)(24, \"label\", 5);\n        i0.ɵɵtext(25, \"Hire Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(26, \"input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"div\", 4)(28, \"label\", 5);\n        i0.ɵɵtext(29, \"Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"select\", 7)(31, \"option\");\n        i0.ɵɵtext(32, \"Active\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"option\");\n        i0.ɵɵtext(34, \"Inactive\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(35, \"div\", 11)(36, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function AddEditComponent_Template_button_click_36_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵtemplate(37, AddEditComponent_span_37_Template, 1, 0, \"span\", 13);\n        i0.ɵɵtext(38, \" Save \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"button\", 14);\n        i0.ɵɵtext(40, \"Cancel\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", ctx.id ? \"Edit\" : \"Add\", \" Employee\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formControl\", ctx.f.employeeId)(\"ngClass\", i0.ɵɵpureFunction1(19, _c0, ctx.submitted && ctx.f.employeeId.errors))(\"disabled\", !!ctx.id);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formControl\", ctx.f.userId)(\"ngClass\", i0.ɵɵpureFunction1(21, _c0, ctx.submitted && ctx.f.userId.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.users);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formControl\", ctx.f.position)(\"ngClass\", i0.ɵɵpureFunction1(23, _c0, ctx.submitted && ctx.f.position.errors));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formControl\", ctx.f.departmentId)(\"ngClass\", i0.ɵɵpureFunction1(25, _c0, ctx.submitted && ctx.f.departmentId.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.departments);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formControl\", ctx.f.hireDate)(\"ngClass\", i0.ɵɵpureFunction1(27, _c0, ctx.submitted && ctx.f.hireDate.errors));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formControl\", ctx.f.status)(\"ngClass\", i0.ɵɵpureFunction1(29, _c0, ctx.submitted && ctx.f.status.errors));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"disabled\", ctx.submitting);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitting);\n      }\n    },\n    dependencies: [i4.NgClass, i4.NgForOf, i4.NgIf, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.FormControlDirective, i2.RouterLink],\n    encapsulation: 2\n  });\n  return AddEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}