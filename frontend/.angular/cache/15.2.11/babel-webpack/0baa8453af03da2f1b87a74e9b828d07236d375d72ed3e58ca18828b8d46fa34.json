{"ast":null,"code":"import { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../_services\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nconst _c0 = [\"usersChart\"];\nconst _c1 = [\"tokenChart\"];\nfunction DashboardComponent_div_83_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 54)(1, \"div\", 55)(2, \"span\", 56);\n    i0.ɵɵtext(3, \"Loading...\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction DashboardComponent_div_101_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 54)(1, \"div\", 55)(2, \"span\", 56);\n    i0.ɵɵtext(3, \"Loading...\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nexport let DashboardComponent = /*#__PURE__*/(() => {\n  class DashboardComponent {\n    constructor(accountService) {\n      this.accountService = accountService;\n      this.totalUsers = 0;\n      this.activeUsers = 0;\n      this.onlineUsers = 0;\n      this.verifiedUsers = 0;\n      this.monthlyRegistrations = [];\n      this.refreshTokens = 0;\n      this.loading = true;\n    }\n    ngOnInit() {\n      this.loadStats();\n    }\n    ngAfterViewInit() {\n      setTimeout(() => this.initCharts(), 500);\n    }\n    loadStats() {\n      this.accountService.getUserStats().pipe(first()).subscribe(stats => {\n        this.totalUsers = stats.totalUsers;\n        this.activeUsers = stats.activeUsers;\n        this.onlineUsers = stats.onlineUsers;\n        this.verifiedUsers = stats.verifiedUsers;\n        this.refreshTokens = stats.refreshTokenCount;\n        this.monthlyRegistrations = stats.monthlyData;\n        this.loading = false;\n        // Initialize charts after data is loaded\n        this.initCharts();\n      });\n    }\n    initCharts() {\n      if (this.usersChartRef && this.usersChartRef.nativeElement) {\n        const ctx = this.usersChartRef.nativeElement.getContext('2d');\n        new Chart(ctx, {\n          type: 'bar',\n          data: {\n            labels: this.monthlyRegistrations.map(item => item.month),\n            datasets: [{\n              label: 'New Users',\n              data: this.monthlyRegistrations.map(item => item.count),\n              backgroundColor: 'rgba(75, 192, 192, 0.5)',\n              borderColor: 'rgba(75, 192, 192, 1)',\n              borderWidth: 1\n            }]\n          },\n          options: {\n            scales: {\n              y: {\n                beginAtZero: true\n              }\n            },\n            responsive: true,\n            maintainAspectRatio: false\n          }\n        });\n      }\n      if (this.tokenChartRef && this.tokenChartRef.nativeElement) {\n        const ctx = this.tokenChartRef.nativeElement.getContext('2d');\n        new Chart(ctx, {\n          type: 'doughnut',\n          data: {\n            labels: ['Active Sessions', 'Inactive'],\n            datasets: [{\n              data: [this.refreshTokens, this.totalUsers - this.refreshTokens],\n              backgroundColor: ['rgba(54, 162, 235, 0.5)', 'rgba(255, 99, 132, 0.5)'],\n              borderColor: ['rgba(54, 162, 235, 1)', 'rgba(255, 99, 132, 1)'],\n              borderWidth: 1\n            }]\n          },\n          options: {\n            responsive: true,\n            maintainAspectRatio: false\n          }\n        });\n      }\n    }\n  }\n  DashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.AccountService));\n  };\n  DashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    viewQuery: function DashboardComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.usersChartRef = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tokenChartRef = _t.first);\n      }\n    },\n    decls: 112,\n    vars: 6,\n    consts: [[1, \"container-fluid\"], [1, \"row\", \"mb-4\"], [1, \"col-12\"], [1, \"mb-4\", \"fw-light\"], [1, \"fas\", \"fa-chart-line\", \"text-primary\", \"me-2\"], [1, \"text-muted\", \"lead\"], [1, \"col-xl-3\", \"col-md-6\", \"mb-4\"], [1, \"card\", \"border-left-primary\", \"shadow\", \"h-100\", \"py-2\", \"rounded-4\"], [1, \"card-body\"], [1, \"row\", \"no-gutters\", \"align-items-center\"], [1, \"col\", \"mr-2\"], [1, \"text-xs\", \"font-weight-bold\", \"text-primary\", \"text-uppercase\", \"mb-1\"], [1, \"h3\", \"mb-0\", \"font-weight-bold\", \"text-gray-800\"], [1, \"text-muted\", \"small\", \"mt-2\"], [1, \"col-auto\"], [1, \"fas\", \"fa-users\", \"fa-2x\", \"text-gray-300\"], [1, \"card\", \"border-left-success\", \"shadow\", \"h-100\", \"py-2\", \"rounded-4\"], [1, \"text-xs\", \"font-weight-bold\", \"text-success\", \"text-uppercase\", \"mb-1\"], [1, \"fas\", \"fa-user-check\", \"fa-2x\", \"text-gray-300\"], [1, \"card\", \"border-left-warning\", \"shadow\", \"h-100\", \"py-2\", \"rounded-4\"], [1, \"text-xs\", \"font-weight-bold\", \"text-warning\", \"text-uppercase\", \"mb-1\"], [1, \"fas\", \"fa-certificate\", \"fa-2x\", \"text-gray-300\"], [1, \"card\", \"border-left-info\", \"shadow\", \"h-100\", \"py-2\", \"rounded-4\"], [1, \"text-xs\", \"font-weight-bold\", \"text-info\", \"text-uppercase\", \"mb-1\"], [1, \"col-auto\", \"d-flex\", \"align-items-center\"], [1, \"fas\", \"fa-circle\", \"text-success\", \"me-2\"], [\"routerLink\", \"users-online\", 1, \"text-decoration-none\", \"stretched-link\"], [1, \"row\"], [1, \"col-xl-8\", \"col-lg-7\"], [1, \"card\", \"shadow\", \"mb-4\", \"rounded-4\", \"border-0\"], [1, \"card-header\", \"py-3\", \"d-flex\", \"flex-row\", \"align-items-center\", \"justify-content-between\", \"bg-transparent\", \"border-bottom-0\"], [1, \"m-0\", \"font-weight-bold\", \"text-primary\"], [1, \"fas\", \"fa-users\", \"me-2\"], [1, \"dropdown\", \"no-arrow\"], [\"href\", \"#\", \"role\", \"button\", \"id\", \"dropdownMenuLink\", \"data-bs-toggle\", \"dropdown\", \"aria-expanded\", \"false\", 1, \"dropdown-toggle\"], [1, \"fas\", \"fa-ellipsis-v\", \"fa-sm\", \"fa-fw\", \"text-gray-400\"], [\"aria-labelledby\", \"dropdownMenuLink\", 1, \"dropdown-menu\", \"dropdown-menu-end\", \"shadow\"], [\"href\", \"#\", 1, \"dropdown-item\"], [1, \"fas\", \"fa-download\", \"me-2\"], [1, \"fas\", \"fa-print\", \"me-2\"], [\"class\", \"d-flex justify-content-center py-5\", 4, \"ngIf\"], [1, \"chart-area\", 2, \"height\", \"350px\"], [\"usersChart\", \"\"], [1, \"mt-4\", \"text-center\", \"small\"], [1, \"me-2\"], [1, \"fas\", \"fa-circle\", \"text-info\"], [1, \"col-xl-4\", \"col-lg-5\"], [1, \"fas\", \"fa-key\", \"me-2\"], [1, \"btn\", \"btn-sm\", \"btn-outline-primary\", \"rounded-pill\", 3, \"click\"], [1, \"fas\", \"fa-sync-alt\", \"me-1\"], [1, \"chart-pie\", \"pt-4\", 2, \"height\", \"350px\"], [\"tokenChart\", \"\"], [1, \"fas\", \"fa-circle\", \"text-primary\"], [1, \"fas\", \"fa-circle\", \"text-danger\"], [1, \"d-flex\", \"justify-content-center\", \"py-5\"], [\"role\", \"status\", 1, \"spinner-border\", \"text-primary\"], [1, \"visually-hidden\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h1\", 3);\n        i0.ɵɵelement(4, \"i\", 4);\n        i0.ɵɵtext(5, \"Analytics Dashboard \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"p\", 5);\n        i0.ɵɵtext(7, \"Monitor system performance and user activities in real-time\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(8, \"div\", 1)(9, \"div\", 6)(10, \"div\", 7)(11, \"div\", 8)(12, \"div\", 9)(13, \"div\", 10)(14, \"div\", 11);\n        i0.ɵɵtext(15, \" Total Users\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 12);\n        i0.ɵɵtext(17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 13);\n        i0.ɵɵtext(19, \"Registered accounts\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"div\", 14);\n        i0.ɵɵelement(21, \"i\", 15);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(22, \"div\", 6)(23, \"div\", 16)(24, \"div\", 8)(25, \"div\", 9)(26, \"div\", 10)(27, \"div\", 17);\n        i0.ɵɵtext(28, \" Active Users\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"div\", 12);\n        i0.ɵɵtext(30);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"div\", 13);\n        i0.ɵɵtext(32, \"Accounts with active status\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(33, \"div\", 14);\n        i0.ɵɵelement(34, \"i\", 18);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(35, \"div\", 6)(36, \"div\", 19)(37, \"div\", 8)(38, \"div\", 9)(39, \"div\", 10)(40, \"div\", 20);\n        i0.ɵɵtext(41, \" Verified Users\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"div\", 12);\n        i0.ɵɵtext(43);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"div\", 13);\n        i0.ɵɵtext(45, \"Email verified accounts\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(46, \"div\", 14);\n        i0.ɵɵelement(47, \"i\", 21);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(48, \"div\", 6)(49, \"div\", 22)(50, \"div\", 8)(51, \"div\", 9)(52, \"div\", 10)(53, \"div\", 23);\n        i0.ɵɵtext(54, \" Online Users\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(55, \"div\", 12);\n        i0.ɵɵtext(56);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(57, \"div\", 13);\n        i0.ɵɵtext(58, \"Currently logged in\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(59, \"div\", 24);\n        i0.ɵɵelement(60, \"i\", 25);\n        i0.ɵɵelementStart(61, \"a\", 26);\n        i0.ɵɵtext(62, \"View List\");\n        i0.ɵɵelementEnd()()()()()()();\n        i0.ɵɵelementStart(63, \"div\", 27)(64, \"div\", 28)(65, \"div\", 29)(66, \"div\", 30)(67, \"h6\", 31);\n        i0.ɵɵelement(68, \"i\", 32);\n        i0.ɵɵtext(69, \"User Registration Overview \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(70, \"div\", 33)(71, \"a\", 34);\n        i0.ɵɵelement(72, \"i\", 35);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(73, \"ul\", 36)(74, \"li\")(75, \"a\", 37);\n        i0.ɵɵelement(76, \"i\", 38);\n        i0.ɵɵtext(77, \"Export Data\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(78, \"li\")(79, \"a\", 37);\n        i0.ɵɵelement(80, \"i\", 39);\n        i0.ɵɵtext(81, \"Print Chart\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(82, \"div\", 8);\n        i0.ɵɵtemplate(83, DashboardComponent_div_83_Template, 4, 0, \"div\", 40);\n        i0.ɵɵelementStart(84, \"div\", 41);\n        i0.ɵɵelement(85, \"canvas\", null, 42);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(87, \"div\", 43)(88, \"span\", 44);\n        i0.ɵɵelement(89, \"i\", 45);\n        i0.ɵɵtext(90, \" New Registrations \");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(91, \"div\", 46)(92, \"div\", 29)(93, \"div\", 30)(94, \"h6\", 31);\n        i0.ɵɵelement(95, \"i\", 47);\n        i0.ɵɵtext(96, \"Active Sessions \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(97, \"button\", 48);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_97_listener() {\n          return ctx.loadStats();\n        });\n        i0.ɵɵelement(98, \"i\", 49);\n        i0.ɵɵtext(99, \" Refresh \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(100, \"div\", 8);\n        i0.ɵɵtemplate(101, DashboardComponent_div_101_Template, 4, 0, \"div\", 40);\n        i0.ɵɵelementStart(102, \"div\", 50);\n        i0.ɵɵelement(103, \"canvas\", null, 51);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(105, \"div\", 43)(106, \"span\", 44);\n        i0.ɵɵelement(107, \"i\", 52);\n        i0.ɵɵtext(108, \" Active Sessions \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(109, \"span\", 44);\n        i0.ɵɵelement(110, \"i\", 53);\n        i0.ɵɵtext(111, \" Inactive \");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(17);\n        i0.ɵɵtextInterpolate(ctx.totalUsers);\n        i0.ɵɵadvance(13);\n        i0.ɵɵtextInterpolate(ctx.activeUsers);\n        i0.ɵɵadvance(13);\n        i0.ɵɵtextInterpolate(ctx.verifiedUsers);\n        i0.ɵɵadvance(13);\n        i0.ɵɵtextInterpolate(ctx.onlineUsers);\n        i0.ɵɵadvance(27);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(18);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      }\n    },\n    dependencies: [i2.NgIf, i3.RouterLink],\n    encapsulation: 2\n  });\n  return DashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}