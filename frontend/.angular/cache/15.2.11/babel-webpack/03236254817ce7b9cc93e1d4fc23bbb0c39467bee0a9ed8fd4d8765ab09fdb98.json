{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../_services\";\nimport * as i4 from \"@angular/common\";\nfunction AddEditComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nfunction AddEditComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"div\", 17)(2, \"div\", 18)(3, \"label\", 5);\n    i0.ɵɵtext(4, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 18)(7, \"label\", 5);\n    i0.ɵɵtext(8, \"Quantity\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"input\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 21)(11, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function AddEditComponent_div_18_Template_button_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const i_r6 = restoredCtx.index;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.removeItem(i_r6));\n    });\n    i0.ɵɵtext(12, \"Remove\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const item_r5 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_1_0;\n    let tmp_3_0;\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"formControl\", item_r5.get(\"name\"))(\"ngClass\", i0.ɵɵpureFunction1(4, _c0, ctx_r1.submitted && ((tmp_1_0 = item_r5.get(\"name\")) == null ? null : tmp_1_0.errors)));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formControl\", item_r5.get(\"quantity\"))(\"ngClass\", i0.ɵɵpureFunction1(6, _c0, ctx_r1.submitted && ((tmp_3_0 = item_r5.get(\"quantity\")) == null ? null : tmp_3_0.errors)));\n  }\n}\nfunction AddEditComponent_option_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 23);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const employee_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", employee_r9.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", employee_r9.employeeId, \" - \", employee_r9.user == null ? null : employee_r9.user.email, \"\");\n  }\n}\nfunction AddEditComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"label\", 5);\n    i0.ɵɵtext(2, \"Status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"select\", 6)(4, \"option\");\n    i0.ɵɵtext(5, \"Pending\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"option\");\n    i0.ɵɵtext(7, \"Approved\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"option\");\n    i0.ɵɵtext(9, \"Rejected\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formControl\", ctx_r3.f.status)(\"ngClass\", i0.ɵɵpureFunction1(2, _c0, ctx_r3.submitted && ctx_r3.f.status.errors));\n  }\n}\nfunction AddEditComponent_span_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 24);\n  }\n}\nexport let AddEditComponent = /*#__PURE__*/(() => {\n  class AddEditComponent {\n    constructor(formBuilder, route, router, requestService, employeeService, accountService, alertService) {\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.requestService = requestService;\n      this.employeeService = employeeService;\n      this.accountService = accountService;\n      this.alertService = alertService;\n      this.loading = false;\n      this.submitting = false;\n      this.submitted = false;\n      this.employees = [];\n      this.errorMessage = '';\n    }\n    ngOnInit() {\n      this.id = this.route.snapshot.params['id'];\n      this.title = this.id ? 'Edit Request' : 'Add Request';\n      this.form = this.formBuilder.group({\n        type: ['Equipment', Validators.required],\n        employeeId: ['', Validators.required],\n        items: this.formBuilder.array([]),\n        status: ['Pending', Validators.required]\n      });\n      // Load employees\n      this.employeeService.getAll().pipe(first()).subscribe(employees => {\n        var _a, _b, _c, _d;\n        this.employees = employees;\n        // If user is not admin, set employeeId to current user's employee record\n        if (((_a = this.accountService.accountValue) === null || _a === void 0 ? void 0 : _a.role) !== 'Admin') {\n          const currentUserId = (_b = this.accountService.accountValue) === null || _b === void 0 ? void 0 : _b.id;\n          const userEmployee = employees.find(e => e.userId === currentUserId);\n          if (userEmployee) {\n            (_c = this.form.get('employeeId')) === null || _c === void 0 ? void 0 : _c.setValue(userEmployee.id);\n            (_d = this.form.get('employeeId')) === null || _d === void 0 ? void 0 : _d.disable();\n          }\n        }\n      }, error => {\n        console.error('Error loading employees:', error);\n      });\n      if (this.id) {\n        this.loading = true;\n        this.requestService.getById(this.id).pipe(first()).subscribe(request => {\n          this.form.patchValue({\n            type: request.type,\n            employeeId: request.employeeId,\n            status: request.status\n          });\n          // Load items\n          if (request.requestItems && request.requestItems.length) {\n            request.requestItems.forEach(item => {\n              this.addItem(item.name, item.quantity);\n            });\n          }\n          this.loading = false;\n        }, error => {\n          console.error('Error loading request:', error);\n          this.loading = false;\n        });\n      } else {\n        // Add default empty item\n        this.addItem();\n      }\n    }\n    // convenience getters for easy access to form fields\n    get f() {\n      return this.form.controls;\n    }\n    get itemsArray() {\n      return this.f.items;\n    }\n    get items() {\n      return this.itemsArray.controls;\n    }\n    addItem(name = '', quantity = 1) {\n      this.itemsArray.push(this.formBuilder.group({\n        name: [name, Validators.required],\n        quantity: [quantity, [Validators.required, Validators.min(1)]]\n      }));\n    }\n    removeItem(index) {\n      this.itemsArray.removeAt(index);\n    }\n    onSubmit() {\n      this.submitted = true;\n      this.errorMessage = '';\n      // reset alerts on submit\n      this.alertService.clear();\n      // stop here if form is invalid\n      if (this.form.invalid) {\n        return;\n      }\n      this.submitting = true;\n      this.saveRequest().pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Request saved successfully', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['/requests']);\n        },\n        error: error => {\n          this.errorMessage = error;\n          this.submitting = false;\n        }\n      });\n    }\n    saveRequest() {\n      var _a, _b;\n      // Enable disabled fields for submission\n      if ((_a = this.form.get('employeeId')) === null || _a === void 0 ? void 0 : _a.disabled) {\n        (_b = this.form.get('employeeId')) === null || _b === void 0 ? void 0 : _b.enable();\n      }\n      const request = this.form.value;\n      return this.id ? this.requestService.update(this.id, request) : this.requestService.create(request);\n    }\n  }\n  AddEditComponent.ɵfac = function AddEditComponent_Factory(t) {\n    return new (t || AddEditComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.RequestService), i0.ɵɵdirectiveInject(i3.EmployeeService), i0.ɵɵdirectiveInject(i3.AccountService), i0.ɵɵdirectiveInject(i3.AlertService));\n  };\n  AddEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddEditComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 33,\n    vars: 15,\n    consts: [[1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"mb-3\"], [1, \"form-label\"], [1, \"form-select\", 3, \"formControl\", \"ngClass\"], [\"class\", \"border p-2 mb-2\", 4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-secondary\", 3, \"click\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"mb-3\", 4, \"ngIf\"], [1, \"text-center\"], [1, \"btn\", \"btn-primary\", \"me-2\", 3, \"disabled\", \"click\"], [\"class\", \"spinner-border spinner-border-sm me-1\", 4, \"ngIf\"], [\"routerLink\", \"/requests\", 1, \"btn\", \"btn-secondary\"], [1, \"alert\", \"alert-danger\"], [1, \"border\", \"p-2\", \"mb-2\"], [1, \"row\"], [1, \"col-md-5\"], [\"type\", \"text\", 1, \"form-control\", 3, \"formControl\", \"ngClass\"], [\"type\", \"number\", 1, \"form-control\", 3, \"formControl\", \"ngClass\"], [1, \"col-md-2\", \"d-flex\", \"align-items-end\"], [1, \"btn\", \"btn-danger\", 3, \"click\"], [3, \"value\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-1\"]],\n    template: function AddEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵtemplate(4, AddEditComponent_div_4_Template, 2, 1, \"div\", 3);\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n        i0.ɵɵtext(7, \"Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"select\", 6)(9, \"option\");\n        i0.ɵɵtext(10, \"Equipment\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"option\");\n        i0.ɵɵtext(12, \"Leave\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"option\");\n        i0.ɵɵtext(14, \"Resources\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(15, \"div\", 4)(16, \"label\", 5);\n        i0.ɵɵtext(17, \"Items\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(18, AddEditComponent_div_18_Template, 13, 8, \"div\", 7);\n        i0.ɵɵelementStart(19, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function AddEditComponent_Template_button_click_19_listener() {\n          return ctx.addItem();\n        });\n        i0.ɵɵtext(20, \"Add Item\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"div\", 4)(22, \"label\", 5);\n        i0.ɵɵtext(23, \"Employee\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"select\", 6);\n        i0.ɵɵtemplate(25, AddEditComponent_option_25_Template, 2, 3, \"option\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(26, AddEditComponent_div_26_Template, 10, 4, \"div\", 10);\n        i0.ɵɵelementStart(27, \"div\", 11)(28, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function AddEditComponent_Template_button_click_28_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵtemplate(29, AddEditComponent_span_29_Template, 1, 0, \"span\", 13);\n        i0.ɵɵtext(30, \" Save \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"button\", 14);\n        i0.ɵɵtext(32, \"Cancel\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", ctx.id ? \"Edit\" : \"Add\", \" Request\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formControl\", ctx.f.type)(\"ngClass\", i0.ɵɵpureFunction1(11, _c0, ctx.submitted && ctx.f.type.errors));\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngForOf\", ctx.items);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formControl\", ctx.f.employeeId)(\"ngClass\", i0.ɵɵpureFunction1(13, _c0, ctx.submitted && ctx.f.employeeId.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.employees);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.id && (ctx.accountService.accountValue == null ? null : ctx.accountService.accountValue.role) === \"Admin\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.submitting);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitting);\n      }\n    },\n    dependencies: [i4.NgClass, i4.NgForOf, i4.NgIf, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.FormControlDirective, i2.RouterLink],\n    encapsulation: 2\n  });\n  return AddEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}