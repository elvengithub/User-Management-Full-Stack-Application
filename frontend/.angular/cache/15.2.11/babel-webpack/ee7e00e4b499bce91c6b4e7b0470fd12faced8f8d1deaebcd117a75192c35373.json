{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../_services\";\nimport * as i4 from \"@angular/common\";\nfunction TransferComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nfunction TransferComponent_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const dept_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", dept_r3.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(dept_r3.name);\n  }\n}\nfunction TransferComponent_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 14);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport let TransferComponent = /*#__PURE__*/(() => {\n  class TransferComponent {\n    constructor(formBuilder, route, router, employeeService, departmentService, alertService) {\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.employeeService = employeeService;\n      this.departmentService = departmentService;\n      this.alertService = alertService;\n      this.employee = null;\n      this.departments = [];\n      this.loading = false;\n      this.submitting = false;\n      this.submitted = false;\n      this.errorMessage = '';\n    }\n    ngOnInit() {\n      this.id = this.route.snapshot.params['id'];\n      this.form = this.formBuilder.group({\n        departmentId: ['', Validators.required]\n      });\n      // Load departments\n      this.departmentService.getAll().pipe(first()).subscribe(departments => {\n        this.departments = departments;\n      }, error => {\n        console.error('Error loading departments:', error);\n      });\n      // Load employee details\n      this.loading = true;\n      this.employeeService.getById(this.id).pipe(first()).subscribe(employee => {\n        var _a;\n        this.employee = employee;\n        (_a = this.form.get('departmentId')) === null || _a === void 0 ? void 0 : _a.setValue(employee.departmentId);\n        this.loading = false;\n      }, error => {\n        console.error('Error loading employee:', error);\n        this.loading = false;\n        this.router.navigate(['/employees']);\n      });\n    }\n    // convenience getter for easy access to form fields\n    get f() {\n      return this.form.controls;\n    }\n    onSubmit() {\n      this.submitted = true;\n      this.errorMessage = '';\n      // reset alerts on submit\n      this.alertService.clear();\n      // stop here if form is invalid\n      if (this.form.invalid) {\n        return;\n      }\n      this.submitting = true;\n      this.employeeService.transfer(this.id, this.form.value.departmentId).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Employee transferred successfully', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['/employees']);\n        },\n        error: error => {\n          this.errorMessage = error;\n          this.submitting = false;\n        }\n      });\n    }\n  }\n  TransferComponent.ɵfac = function TransferComponent_Factory(t) {\n    return new (t || TransferComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.EmployeeService), i0.ɵɵdirectiveInject(i3.DepartmentService), i0.ɵɵdirectiveInject(i3.AlertService));\n  };\n  TransferComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TransferComponent,\n    selectors: [[\"ng-component\"]],\n    decls: 16,\n    vars: 9,\n    consts: [[1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"mb-3\"], [1, \"form-label\"], [1, \"form-select\", 3, \"formControl\", \"ngClass\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"modal-footer\"], [1, \"btn\", \"btn-warning\", 3, \"disabled\", \"click\"], [\"class\", \"spinner-border spinner-border-sm me-1\", 4, \"ngIf\"], [\"routerLink\", \"/employees\", 1, \"btn\", \"btn-secondary\"], [1, \"alert\", \"alert-danger\"], [3, \"value\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-1\"]],\n    template: function TransferComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵtemplate(4, TransferComponent_div_4_Template, 2, 1, \"div\", 3);\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n        i0.ɵɵtext(7, \"Department\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"select\", 6);\n        i0.ɵɵtemplate(9, TransferComponent_option_9_Template, 2, 2, \"option\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 8)(11, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function TransferComponent_Template_button_click_11_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵtemplate(12, TransferComponent_span_12_Template, 1, 0, \"span\", 10);\n        i0.ɵɵtext(13, \" Transfer \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"button\", 11);\n        i0.ɵɵtext(15, \"Cancel\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"Transfer Employee: \", ctx.employee == null ? null : ctx.employee.employeeId, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formControl\", ctx.f.departmentId)(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ctx.submitted && ctx.f.departmentId.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.departments);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.submitting);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitting);\n      }\n    },\n    dependencies: [i4.NgClass, i4.NgForOf, i4.NgIf, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.FormControlDirective, i2.RouterLink],\n    encapsulation: 2\n  });\n  return TransferComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}